blueprint:
  name: IKEA Rodret Dimmer
  description: "## IKEA RODRET Dimmer remote (v1.69)


    Only for use with [ZHA](https://www.home-assistant.io/integrations/zha/)


    Available controls:

    - Click the **on** or **off** buttons

    - Click and hold the **on**/**off** buttons (optional). Actions will be executed every **Helper - Hold delay**,
      but maximum **Helper - Max number of loops** times.

    - Double click the **on** or **off** buttons (optional) in **Helper - Multi click delay** interval.

    - Click the **on** button if the light is already on (optional).
    "
  source_url: https://github.com/trilorian/zha/blob/main/ikea-rodret_E2201_ZHA.yaml
  domain: automation
  input:
    remote_device:
      name: Remote
      description: IKEA Rodret dimmer remote to use.
      default: ""
      selector:
        device:
          filter:
            integration: zha
            manufacturer: IKEA of Sweden
            model: RODRET Dimmer
          multiple: false
    on_click_action:
      name: On - Single click action
      description: Choose action(s) to run when **on** button is clicked.
      default: []
      selector:
        action: {}
    off_click_action:
      name: Off - Single click action
      description: Choose action(s) to run when **off** button is **clicked**.
      default: []
      selector:
        action: {}
    on_hold_enabled:
      name: On - Hold enabled
      description:
        Choose whether or not to react to the **hold** event for the **on** button.
      default: false
      selector:
        boolean: {}
    on_hold_action:
      name: On - Hold action
      description:
        Choose action(s) to run when **on** button is **clicked and held**. **On - Hold enabled** must be set.
      default: []
      selector:
        action: {}
    off_hold_enabled:
      name: Off - Hold enabled
      description:
        Choose whether or not to react to the **hold** event for the **off** button.
      default: false
      selector:
        boolean: {}
    off_hold_action:
      name: Off - Hold action
      description:
        Choose action(s) to run when **off** button is **clicked and held**. **Off - Hold enabled** must be set.
      default: []
      selector:
        action: {}
    on_double_click_enabled:
      name: On - Double click enabled
      description:
        Choose whether or not to react to the **double click** event for the **on** button.
      default: false
      selector:
        boolean: {}
    on_double_click_action:
      name: On - Double click action
      description:
        Choose action(s) to run when clicking the **on** button twice in **Helper - Multi click delay** interval. **On - Double click enabled** must be set.
      default: []
      selector:
        action: {}
    on_triple_click_enabled:
      name: On - Triple click enabled
      description:
        Choose whether or not to react to the **triple click** event for the **on** button.
      default: false
      selector:
        boolean: {}
    on_triple_click_action:
      name: On - Triple click action
      description:
        Choose action(s) to run when clicking the **on** button three times in **Helper - Multi click delay** interval. **On - Triple click enabled** must be set.
      default: []
      selector:
        action: {}
    off_double_click_enabled:
      name: Off - Double click enabled
      description:
        Choose whether or not to react to the **double click** event for the **off** button.
      default: false
      selector:
        boolean: {}
    off_double_click_action:
      name: Off - Double click action
      description:
        Choose action(s) to run when clicking the **off** button twice in **Helper - Multi click delay** interval. **Off - Double click enabled** must be set.
      default: []
      selector:
        action: {}
    off_triple_click_enabled:
      name: Off - Triple click enabled
      description:
        Choose whether or not to react to the **triple click** event for the **off** button.
      default: false
      selector:
        boolean: {}
    off_triple_click_action:
      name: Off - Triple click action
      description:
        Choose action(s) to run when clicking the **off** button three times in **Helper - Multi click delay** interval. **Off - Double click enabled** must be set.
      default: []
      selector:
        action: {}
    on_if_on_enabled:
      name: On - if on event
      description:
        Choose if the on action should be overridden, if the chosen device is already on.
      default: false
      selector:
        boolean: {}
    on_if_on_light:
      name: On if on light
      description:
        If the on event is overriden, choose the light for which to test the state. **On - if on event** must be exposed.
      selector:
        entity:
          filter:
            domain: light
          multiple: false
      default: []
    on_if_on_action:
      name: On if on action
      description:
        Choose action(s) to run when clicking the **on** button again (if a device is chosen and it is already on).
      default: []
      selector:
        action: {}
    helper_multi_click_delay:
      name: Helper - Multi click delay
      description:
        Max delay between the button clicks for the **Multi click events**. Change this value if you notice that the multi click action is not triggered properly.
      default: 250
      selector:
        number:
          unit_of_measurement: milliseconds
          min: 100.0
          max: 5000.0
          step: 10.0
          mode: slider
    helper_hold_delay:
      name: Helper - Hold delay
      description: Delay between the execution of the **Hold** action(s).
      default: 250
      selector:
        number:
          unit_of_measurement: milliseconds
          min: 100.0
          max: 5000.0
          step: 10.0
          mode: slider
    helper_max_loops:
      name: Helper - Max number of loops
      description: Maximum number of loops when holding down a button.
      default: 20
      selector:
        number:
          min: 1.0
          max: 1000.0
          step: 1.0
          mode: slider
#initial_state: true
# Force restart to pickup double click
mode: restart
max_exceeded: silent
trigger_variables:
  zha_remote: !input remote_device
trigger:
  - platform: event
    event_type: zha_event
#    event_data:
#      device_id: "{{ zha_remote }}"
#      command: "on"
#      cluster_id: 6
#      endpoint_id: 1
#    id: click-on-zha
#  - platform: event
#    event_type: zha_event
#    event_data:
#      device_id: "{{ zha_remote }}"
#      command: "off"
#      cluster_id: 6
#      endpoint_id: 1
#    id: click-off-zha
#  - platform: event
#    event_type: zha_event
#    event_data:
#      device_id: "{{ zha_remote }}"
#      command: "move_with_on_off"
#      cluster_id: 8
#      endpoint_id: 1
#      args: [0, 83]
#    id: hold-on-zha
#  - platform: event
#    event_type: zha_event
#    event_data:
#      device_id: "{{ zha_remote }}"
#      command: "move"
#      cluster_id: 8
#      endpoint_id: 1
#      args: [1, 83, 0, 0]
#    id: hold-off-zha
#  - platform: event
#    event_type: zha_event
#    event_data:
#      device_id: "{{ zha_remote }}"
#      command: "stop_with_on_off"
#      cluster_id: 8
#      endpoint_id: 1
#    id: release-zha
action:
  # Increment the counter then delay helper_multi_click_delay ms to allow for a second click to cancel the second action
  - service: counter.increment
    entity_id: counter.zha_button_click
  - delay:
      milliseconds: !input helper_multi_click_delay

  - variables:
      # Store the click count
#      click_count: '{{ states("counter.zha_button_click") }}'
      on_hold_enabled: !input on_hold_enabled
      off_hold_enabled: !input off_hold_enabled
      on_if_on_enabled: !input on_if_on_enabled
      on_double_click_enabled: !input on_double_click_enabled
      on_triple_click_enabled: !input on_triple_click_enabled
      off_double_click_enabled: !input off_double_click_enabled
      off_triple_click_enabled: !input off_triple_click_enabled

  # Reset the counter
#  - service: counter.reset
#    entity_id: counter.zha_button_click

  - choose:
      - conditions:
#          - condition: trigger
#            id:
#              - click-on-zha
          - condition: state
            entity_id: counter.zha_button_click
            state: '1'
        sequence:
          - choose:
              - conditions:
                  # ON - Single click, check if on_if_on_enabled
                  - condition: template
                    value_template: "{{ on_if_on_enabled }}"
                  - condition: state
                    entity_id: !input on_if_on_light
                    state: "on"
                sequence: !input on_if_on_action
            # Default
            default: !input on_click_action
#      - conditions:
#          - condition: trigger
#            id:
#              - click-off-zha
#        sequence:
#          - wait_for_trigger:
#              - platform: event
#                event_type: zha_event
#                event_data:
#                  device_id: "{{ zha_remote }}"
#                  command: "off"
#                  cluster_id: 6
#                  endpoint_id: 1
#            timeout:
#              milliseconds: !input helper_multi_click_delay
#            continue_on_timeout: true
#          - choose:
#              - conditions:
#                  - condition: template
#                    value_template: '{{ wait.trigger == none }}'
#                # OFF - Single click
#                sequence: !input off_click_action
#            default:
#              - wait_for_trigger:
#                  - platform: event
#                    event_type: zha_event
#                    event_data:
#                      device_id: "{{ zha_remote }}"
#                      command: "off"
#                      cluster_id: 6
#                      endpoint_id: 1
#                timeout:
#                  milliseconds: !input helper_multi_click_delay
#                continue_on_timeout: true
#              - choose:
#                  - conditions:
#                      - condition: template
#                        value_template: '{{ wait.trigger == none }}'
#                    sequence:
#                      - choose:
#                          - conditions:
#                              # OFF Double click, check if off_double_click_enabled
#                              - condition: template
#                                value_template: "{{ off_double_click_enabled }}"
#                            sequence: !input off_double_click_action
#                        default: !input off_click_action
#                default:
#                  - choose:
#                      - conditions:
#                          # OFF - Triple click, check if off_triple_click_enabled
#                          - condition: template
#                            value_template: "{{ off_triple_click_enabled }}"
#                        sequence: !input off_triple_click_action
#                    default: !input off_click_action
