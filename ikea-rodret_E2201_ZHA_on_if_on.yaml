blueprint:
  name: IKEA Rodret Dimmer
  description: "## IKEA RODRET Dimmer remote (v1.22)


    Only for use with [ZHA](https://www.home-assistant.io/integrations/zha/)


    Available controls:

    - Press the **on** or **off** buttons

    - Double press the **on** or **off** buttons (optional) in **Helper - Double press delay** interval. When disabled, there will be no delay for the simple press actions

    - Press and hold the **on**/**off** buttons. Actions will be executed every **Helper - Hold delay**, but maximum **Helper - Max number of loops** times.
    
    - Press the **on** button if the light is already on. Cannot be turned off yet.
    "
  source_url: https://gist.github.com/trilorian/ee957a682ab6a3765e8fbb19502e9bfb
  domain: automation
  input:
    remote_device:
      name: Remote
      description: IKEA Rodret dimmer remote to use.
      default: ""
      selector:
        device:
          filter:
            integration: zha
            manufacturer: IKEA of Sweden
            model: RODRET Dimmer
          multiple: false
    on_press_action:
      name: On - Single press action
      description: Choose action(s) to run when **on** button is pressed.
      default: []
      selector:
        action: {}
    off_press_action:
      name: Off - Single press action
      description: Choose action(s) to run when **off** button is **pressed**.
      default: []
      selector:
        action: {}
    on_hold_action:
      name: On - Hold action
      description: Choose action(s) to run when **on** button is **pressed and hold**.
      default: []
      selector:
        action: {}
    off_hold_action:
      name: Off - Hold action
      description: Choose action(s) to run when **off** button is **pressed and hold**.
      default: []
      selector:
        action: {}
    on_double_press:
      name: On - Double press event
      description:
        Choose whether or not to expose the virtual **double press** event
        for the **on** button. Turn this on if you are providing an action for the **on**
        button double press event.
      default: false
      selector:
        boolean: {}
    on_double_press_action:
      name: On - Double press action
      description:
        Choose action(s) to run when pressing the **on** button twice in **Helper - Double press
        delay** interval. **On - Double press event** must be exposed.
      default: []
      selector:
        action: {}
    off_double_press:
      name: Off - Double press event
      description:
        Choose whether or not to expose the virtual **double press** event
        for the **off** button. Turn this on if you are providing an action for the **off**
        button double press event.
      default: false
      selector:
        boolean: {}
    off_double_press_action:
      name: Off - Double press action
      description:
        Choose action(s) to run when pressing the **off** button twice in **Helper - Double press
        delay** interval. **Off - Double press event** must be exposed.
      default: []
      selector:
        action: {}
    on_if_on:
      name: On if on
      description:
        Choose if the on action should be overridden, if the chosen device is already on. 
        Turn this on if you are providing an action for the **on if on** event.
      default: false
      selector:
        boolean: {}
    on_if_on_light:
      name: On if on light
      description:
        If the on event is overriden, choose the light for which to test the state.
      selector:
        entity:
          filter:
            domain: light
          multiple: false
    on_if_on_action:
      name: On if on action
      description:
        Choose action(s) to run when clicking the **on** button again (if a device is chosen and it is already on).
      default: []
      selector:
        action: {}
    helper_double_press_delay:
      name: Helper - Double press delay
      description:
        Max delay between the first and the second button press for the
        **Double press events**. Provide a value only if you are using a double press action.
        Increase this value if you notice that the double press action is not triggered
        properly.
      default: 250
      selector:
        number:
          unit_of_measurement: milliseconds
          min: 100.0
          max: 5000.0
          step: 10.0
          mode: slider
    helper_hold_delay:
      name: Helper - Hold delay
      description: Delay between the execution of the **Hold** action(s).
      default: 250
      selector:
        number:
          unit_of_measurement: milliseconds
          min: 100.0
          max: 5000.0
          step: 10.0
          mode: slider
    helper_max_loops:
      name: Helper - Max number of loops
      description: Maximum number of loops when holding down a button.
      default: 20
      selector:
        number:
          min: 1.0
          max: 1000.0
          step: 1.0
          mode: slider
mode: single
max_exceeded: silent
trigger_variables:
  zha_remote: !input remote_device
trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: "{{ zha_remote }}"
      command: "on"
      cluster_id: 6
      endpoint_id: 1
    id: press-on-zha
  - platform: event
    event_type: zha_event
    event_data:
      device_id: "{{ zha_remote }}"
      command: "off"
      cluster_id: 6
      endpoint_id: 1
    id: press-off-zha
  - platform: event
    event_type: zha_event
    event_data:
      device_id: "{{ zha_remote }}"
      command: "move_with_on_off"
      cluster_id: 8
      endpoint_id: 1
      args: [0, 83]
    id: hold-on-zha
  - platform: event
    event_type: zha_event
    event_data:
      device_id: "{{ zha_remote }}"
      command: "move"
      cluster_id: 8
      endpoint_id: 1
      args: [1, 83, 0, 0]
    id: hold-off-zha
  - platform: event
    event_type: zha_event
    event_data:
      device_id: "{{ zha_remote }}"
      endpoint_id: 1
      cluster_id: 8
      command: stop_with_on_off
    id: release-zha
action:
  - variables:
      on_double_press: !input on_double_press
      off_double_press: !input off_double_press
      zha_remote: !input remote_device
  - choose:
      - conditions:
          - condition: trigger
            id:
              - press-on-zha
        sequence:
#          - if:
#              - condition: state
#                entity_id: !input on_if_on_light
#                state: "on"
#            then: !input on_if_on_action
#            else: !input on_press_action
          - if:
              - condition: template
                value_template: "{{ on_double_press }}"
            then:
              - choose:
                  - conditions:
                      - condition: trigger
                        id:
                          - press-on-zha
                    sequence:
                      - wait_for_trigger:
                          - platform: event
                            event_type: zha_event
                            event_data:
                              device_id: "{{ zha_remote }}"
                              command: "on"
                              cluster_id: 6
                              endpoint_id: 1
                        timeout:
                          milliseconds: !input helper_double_press_delay
                        continue_on_timeout: true
                      - if:
                          - condition: template
                            value_template: "{{ wait.trigger.idx is defined }}"
                        then: !input on_double_press_action
#                        else: !input on_press_action
                        else:
                          - if:
                              - condition: state
                                entity_id: !input on_if_on_light
                                state: "on"
                            then: !input on_if_on_action
                            else: !input on_press_action
#            else: !input on_press_action
            else:
              - if:
                  - condition: state
                    entity_id: !input on_if_on_light
                    state: "on"
                then: !input on_if_on_action
                else: !input on_press_action
      - conditions:
          - condition: trigger
            id:
              - press-off-zha
        sequence:
          - if:
              - condition: template
                value_template: "{{ off_double_press }}"
            then:
              - choose:
                  - conditions:
                      - condition: trigger
                        id:
                          - press-off-zha
                    sequence:
                      - wait_for_trigger:
                          - platform: event
                            event_type: zha_event
                            event_data:
                              device_id: "{{ zha_remote }}"
                              command: "off"
                              cluster_id: 6
                              endpoint_id: 1
                        timeout:
                          milliseconds: !input helper_double_press_delay
                        continue_on_timeout: true
                      - if:
                          - condition: template
                            value_template: "{{ wait.trigger.idx is defined }}"
                        then: !input off_double_press_action
                        else: !input off_press_action
            else: !input off_press_action
      - conditions:
          - condition: trigger
            id:
              - hold-on-zha
        sequence:
          - repeat:
              count: !input helper_max_loops
              sequence:
                - parallel:
                    - sequence: !input on_hold_action
                    - sequence:
                        - choose:
                            - conditions:
                                - condition: trigger
                                  id:
                                    - hold-on-zha
                              sequence:
                                - wait_for_trigger:
                                    - platform: event
                                      event_type: zha_event
                                      event_data:
                                        device_id: "{{ zha_remote }}"
                                        command: "stop_with_on_off"
                                        cluster_id: 8
                                        endpoint_id: 1
                                  timeout:
                                    milliseconds: !input helper_hold_delay
                                  continue_on_timeout: true
                                - if:
                                    - condition: template
                                      value_template: "{{ wait.trigger.idx is defined }}"
                                  then:
                                    - stop: button released
      - conditions:
          - condition: trigger
            id:
              - hold-off-zha
        sequence:
          - repeat:
              count: !input helper_max_loops
              sequence:
                - parallel:
                    - sequence: !input off_hold_action
                    - sequence:
                        - choose:
                            - conditions:
                                - condition: trigger
                                  id:
                                    - hold-off-zha
                              sequence:
                                - wait_for_trigger:
                                    - platform: event
                                      event_type: zha_event
                                      event_data:
                                        device_id: "{{ zha_remote }}"
                                        command: "stop_with_on_off"
                                        cluster_id: 8
                                        endpoint_id: 1
                                  timeout:
                                    milliseconds: !input helper_hold_delay
                                  continue_on_timeout: true
                                - if:
                                    - condition: template
                                      value_template: "{{ wait.trigger.idx is defined }}"
                                  then:
                                    - stop: button released
